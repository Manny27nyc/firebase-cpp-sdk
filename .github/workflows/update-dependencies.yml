name: Update Android and iOS dependencies
on:
  workflow_dispatch:
    inputs:
      updateAndroid:
        description: 'update Android dependencies?'
        default: 1
      updateiOS:
        description: 'update iOS dependencies?'
        default: 1
      triggerTests:
        description: 'trigger tests on PR?'
        default: 1
      baseBranch:
        description: 'create the new branch from this base'
        default: 'main'

env:
  branchPrefix: "workflow/auto-update-deps-"
  triggerTestsLabel: "tests-requested: quick"

jobs:
  update_dependencies:
    name: update-deps
    runs-on: ubuntu-latest
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Check out base branch
        uses: actions/checkout@v2.3.1
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.baseBranch }}

      - name: Install prerequisites
        run: |
          python scripts/gha/install_prereqs_desktop.py
          python -m pip install requests
          
      - name: Name new branch
        run: |
          date_str=$(date "+%Y%m%d-%H%M%S")
          echo "NEW_BRANCH=${{env.branchPrefix}}${{github.run_number}}-${date_str}" >> $GITHUB_ENV
      - name: Create new branch
        run: |
          git remote update
          git checkout -b "${NEW_BRANCH}"

      - name: Run update script
        run: |
          if [[ ${{ github.event.inputs.updateiOS }} -eq 1 ]]; then
            if [[ ${{ github.event.inputs.updateAndroid }} -eq 1 ]]; then
              # Update both
              echo "Updating all dependencies"
              python scripts/update_android_ios_dependencies.py
              echo "CHOSEN_DEPS=" >> $GITHUB_ENV
            else
              # Update iOS only
              echo "Updating iOS dependencies only"
              python scripts/update_android_ios_dependencies.py --skip_android
              echo "CHOSEN_DEPS=iOS " >> $GITHUB_ENV
            fi
            # iOS: Update Firestore external version to match Firestore Cocoapod version.
            firestore_version=$(grep "pod 'Firebase/Firestore'" ios_pod/Podfile | sed "s/.*'\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\)'.*/\1/")
            sed -i~ "s/^set(version [^)]*)/set(version CocoaPods-${firestore_version})/i" cmake/external/firestore.cmake
          elif [[ ${{ github.event.inputs.updateAndroid }} -eq 1 ]]; then
            # Update Android only
              echo "Updating Android dependencies only"
              python scripts/update_android_ios_dependencies.py --skip_ios
              echo "CHOSEN_DEPS=Android " >> $GITHUB_ENV
          fi
          
      - name: Push branch if there are changes
        id: push-branch
        run: |
          if ! git update-index --refresh; then
            date_str=$(date "+%a %b %d %Y")
            git commit -a -m "Update ${CHOSEN_DEPS} dependencies - ${date_str}"
            echo "::set-output name=branch_pushed::1"
            # Show changes in git log
            git diff
            # Push branch
            git push --set-upstream origin "${NEW_BRANCH}"
            # Create pull request
            python scripts/gha/create_pull_request.py --token ${{github.token}} --head "${NEW_BRANCH}" --base "${{ github.event.inputs.baseBranch }}" --title "Update ${CHOSEN_DEPS} dependencies - ${date_str}" --body "Automatically updated by [workflow]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)."
          else
            echo "::warning ::No changes detected, won't create pull request."
            echo "::set-output name=branch_pushed::0"
          fi

      - name: Get token for triggering tests as firebase-workflow-trigger
        uses: tibdex/github-app-token@v1
        if: ${{ github.event.inputs.triggerTests == 1 && steps.push-branch.outputs.branch_pushed == 1 }}
        id: generate-token
        with:
          app_id: ${{ secrets.WORKFLOW_TRIGGER_APP_ID }}
          private_key: ${{ secrets.WORKFLOW_TRIGGER_APP_PRIVATE_KEY }}

      - name: Set test trigger label.
        if: ${{ github.event.inputs.triggerTests == 1 && steps.push-branch.outputs.branch_pushed == 1 }}
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{ steps.generate-token.outputs.token }}
          label: "${{ env.triggerTestsLabel }}"
          type: add
